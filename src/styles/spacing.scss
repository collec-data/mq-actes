// dans ce fichier on génère les variantes pour les classes utilitaires d'espacement

$props: (
  "p": "padding",
  "m": "margin",
);
$sides: (top, bottom, left, right);
$sizes: (
  "xs": "0.125rem",
  "s": "0.25rem",
  "m": "0.5rem",
  "l": ".75rem",
  "xl": "1rem",
);

@each $prefix, $prop in $props {
  @each $size-prefix, $length in $sizes {
    @each $side in $sides {
      .#{$prefix}#{str-slice($side, 0, 1)}-#{$size-prefix} {
        #{$prop}-#{$side}: #{$length} !important;
      }
    }
    .#{$prefix}x-#{$size-prefix} {
      #{$prop}-left: #{$length} !important;
      #{$prop}-right: #{$length} !important;
    }
    .#{$prefix}y-#{$size-prefix} {
      #{$prop}-top: #{$length} !important;
      #{$prop}-bottom: #{$length} !important;
    }
    .#{$prefix}-#{$size-prefix} {
      #{$prop}: #{$length} !important;
    }
  }
}

@each $size-prefix, $length in $sizes {
  @each $direction in (row, column) {
    .g-#{$direction}-#{$size-prefix} {
      #{$direction}-gap: #{$length} !important;
    }
  }
  .g-#{$size-prefix} {
    gap: #{$length} !important;
  }
}

@each $value in (flex-start, flex-end, center, space-between, space-around, space-evenly) {
  .justify-content-#{$value} {
    justify-content: $value !important;
  }
}

@each $value in (auto, flex-start, flex-end, center, baseline, stretch) {
  .align-items-#{$value} {
    align-items: $value !important;
  }
}
